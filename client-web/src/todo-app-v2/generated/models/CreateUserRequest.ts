/* tslint:disable */
/* eslint-disable */
/**
 * user-todo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UserProfile } from './UserProfile';
import { UserProfileFromJSON, UserProfileFromJSONTyped, UserProfileToJSON } from './UserProfile';

/**
 *
 * @export
 * @interface CreateUserRequest
 */
export interface CreateUserRequest {
  /**
   *
   * @type {string}
   * @memberof CreateUserRequest
   */
  email: string;
  /**
   *
   * @type {string}
   * @memberof CreateUserRequest
   */
  initialPass: string;
  /**
   *
   * @type {UserProfile}
   * @memberof CreateUserRequest
   */
  profile: UserProfile;
}

/**
 * Check if a given object implements the CreateUserRequest interface.
 */
export function instanceOfCreateUserRequest(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'email' in value;
  isInstance = isInstance && 'initialPass' in value;
  isInstance = isInstance && 'profile' in value;

  return isInstance;
}

export function CreateUserRequestFromJSON(json: any): CreateUserRequest {
  return CreateUserRequestFromJSONTyped(json, false);
}

export function CreateUserRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateUserRequest {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    email: json['email'],
    initialPass: json['initialPass'],
    profile: UserProfileFromJSON(json['profile']),
  };
}

export function CreateUserRequestToJSON(value?: CreateUserRequest | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    email: value.email,
    initialPass: value.initialPass,
    profile: UserProfileToJSON(value.profile),
  };
}
