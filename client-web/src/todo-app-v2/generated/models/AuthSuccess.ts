/* tslint:disable */
/* eslint-disable */
/**
 * user-todo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UserProfile } from './UserProfile';
import { UserProfileFromJSON, UserProfileFromJSONTyped, UserProfileToJSON } from './UserProfile';

/**
 *
 * @export
 * @interface AuthSuccess
 */
export interface AuthSuccess {
  /**
   *
   * @type {number}
   * @memberof AuthSuccess
   */
  userId: number;
  /**
   *
   * @type {UserProfile}
   * @memberof AuthSuccess
   */
  profile: UserProfile;
  /**
   *
   * @type {string}
   * @memberof AuthSuccess
   */
  accessToken: string;
  /**
   *
   * @type {string}
   * @memberof AuthSuccess
   */
  refreshToken: string;
}

/**
 * Check if a given object implements the AuthSuccess interface.
 */
export function instanceOfAuthSuccess(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'userId' in value;
  isInstance = isInstance && 'profile' in value;
  isInstance = isInstance && 'accessToken' in value;
  isInstance = isInstance && 'refreshToken' in value;

  return isInstance;
}

export function AuthSuccessFromJSON(json: any): AuthSuccess {
  return AuthSuccessFromJSONTyped(json, false);
}

export function AuthSuccessFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthSuccess {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    userId: json['userId'],
    profile: UserProfileFromJSON(json['profile']),
    accessToken: json['accessToken'],
    refreshToken: json['refreshToken'],
  };
}

export function AuthSuccessToJSON(value?: AuthSuccess | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    userId: value.userId,
    profile: UserProfileToJSON(value.profile),
    accessToken: value.accessToken,
    refreshToken: value.refreshToken,
  };
}
