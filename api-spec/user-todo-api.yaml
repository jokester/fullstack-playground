openapi: 3.0.3
info:
  title: user-todo
  version: '0.1'
paths:
  /user_todo_api/users:
    post:
      operationId: postUser_todo_apiUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccount'
        '400':
          description: client's bad in general
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: login required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '403':
          description: user identity known but action not permitted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '501':
          description: not implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotImplemented'
        default:
          description: server's bad in general
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /user_todo_api/auth/login:
    post:
      operationId: postUser_todo_apiAuthLogin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthSuccess'
        '400':
          description: client's bad in general
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: login required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '403':
          description: user identity known but action not permitted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '501':
          description: not implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotImplemented'
        default:
          description: server's bad in general
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /user_todo_api/auth/refresh_token:
    post:
      operationId: postUser_todo_apiAuthRefresh_token
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthSuccess'
        '401':
          description: login required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '403':
          description: user identity known but action not permitted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '400':
          description: client's bad in general
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '501':
          description: not implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotImplemented'
        default:
          description: server's bad in general
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
      security:
      - httpAuth: []
  /user_todo_api/users/{userId}/profile:
    put:
      operationId: putUser_todo_apiUsersUseridProfile
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccount'
        '400':
          description: client's bad in general
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: login required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '403':
          description: user identity known but action not permitted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '501':
          description: not implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotImplemented'
        default:
          description: server's bad in general
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
      security:
      - httpAuth: []
  /user_todo_api/users/{userId}/todos:
    get:
      operationId: getUser_todo_apiUsersUseridTodos
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'
        '400':
          description: client's bad in general
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: login required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '403':
          description: user identity known but action not permitted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '501':
          description: not implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotImplemented'
        default:
          description: server's bad in general
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
      security:
      - httpAuth: []
    post:
      operationId: postUser_todo_apiUsersUseridTodos
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTodoRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoItem'
        '400':
          description: client's bad in general
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: login required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '403':
          description: user identity known but action not permitted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '501':
          description: not implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotImplemented'
        default:
          description: server's bad in general
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
      security:
      - httpAuth: []
  /user_todo_api/users/{userId}/todos/{todoId}:
    delete:
      operationId: deleteUser_todo_apiUsersUseridTodosTodoid
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
      - name: todoId
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: ''
        '400':
          description: client's bad in general
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: login required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '403':
          description: user identity known but action not permitted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '501':
          description: not implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotImplemented'
        default:
          description: server's bad in general
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
      security:
      - httpAuth: []
    patch:
      operationId: patchUser_todo_apiUsersUseridTodosTodoid
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
      - name: todoId
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoItem'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoItem'
        '400':
          description: client's bad in general
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: login required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '403':
          description: user identity known but action not permitted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '501':
          description: not implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotImplemented'
        default:
          description: server's bad in general
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
      security:
      - httpAuth: []
components:
  schemas:
    AuthSuccess:
      required:
      - userId
      - profile
      - accessToken
      - refreshToken
      type: object
      properties:
        userId:
          type: integer
        profile:
          $ref: '#/components/schemas/UserProfile'
        accessToken:
          type: string
        refreshToken:
          type: string
    BadRequest:
      required:
      - message
      type: object
      properties:
        message:
          type: string
    CreateTodoRequest:
      required:
      - title
      - description
      type: object
      properties:
        title:
          type: string
        description:
          type: string
    CreateUserRequest:
      required:
      - email
      - initialPass
      - profile
      type: object
      properties:
        email:
          type: string
        initialPass:
          type: string
        profile:
          $ref: '#/components/schemas/UserProfile'
    Forbidden:
      required:
      - message
      type: object
      properties:
        message:
          type: string
    LoginRequest:
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    NotFound:
      required:
      - message
      type: object
      properties:
        message:
          type: string
    NotImplemented:
      required:
      - message
      type: object
      properties:
        message:
          type: string
    ServerError:
      required:
      - message
      type: object
      properties:
        message:
          type: string
    TodoItem:
      required:
      - todoId
      - userId
      - title
      - description
      type: object
      properties:
        todoId:
          type: integer
        userId:
          type: integer
        title:
          type: string
        description:
          type: string
        finishedAt:
          type: string
          format: date-time
    TodoList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/TodoItem'
    Unauthorized:
      required:
      - message
      type: object
      properties:
        message:
          type: string
    UserAccount:
      required:
      - userId
      - profile
      type: object
      properties:
        userId:
          type: integer
        profile:
          $ref: '#/components/schemas/UserProfile'
    UserProfile:
      type: object
      properties:
        nickname:
          type: string
        avatarUrl:
          type: string
  securitySchemes:
    httpAuth:
      type: http
      scheme: bearer
