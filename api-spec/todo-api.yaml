openapi: 3.0.3
info:
  title: TodoAPI
  version: '1.0'
paths:
  /todos:
    get:
      description: get list of TODOs
      operationId: list TODO
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
        '401':
          description: login required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '400':
          description: caller's bad
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '501':
          description: not implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotImplemented'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
    post:
      description: create TODO item
      operationId: create TODO
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoCreateRequest'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '400':
          description: caller's bad
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: login required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '501':
          description: not implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotImplemented'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /todos/{todoId}:
    get:
      description: get TODO by id
      operationId: show TODO
      parameters:
      - name: todoId
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '400':
          description: caller's bad
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: login required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '501':
          description: not implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotImplemented'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
    delete:
      description: delete todoItem
      operationId: delete TODO
      parameters:
      - name: todoId
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: ''
        '400':
          description: caller's bad
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: login required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '501':
          description: not implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotImplemented'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
    patch:
      description: update todoItem
      operationId: update TODO
      parameters:
      - name: todoId
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '400':
          description: caller's bad
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: login required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '501':
          description: not implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotImplemented'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
components:
  schemas:
    BadRequest:
      required:
      - message
      type: object
      properties:
        message:
          type: string
    NotFound:
      required:
      - message
      type: object
      properties:
        message:
          type: string
    NotImplemented:
      required:
      - message
      type: object
      properties:
        message:
          type: string
    ServerError:
      required:
      - message
      type: object
      properties:
        message:
          type: string
    Todo:
      required:
      - id
      - title
      - desc
      - finished
      - updatedAt
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        desc:
          type: string
        finished:
          type: boolean
        updatedAt:
          type: string
          format: date-time
    TodoCreateRequest:
      required:
      - title
      - desc
      type: object
      properties:
        title:
          type: string
        desc:
          type: string
    Unauthorized:
      required:
      - message
      type: object
      properties:
        message:
          type: string
